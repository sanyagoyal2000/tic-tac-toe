{"ast":null,"code":"var _jsxFileName = \"/Users/sanyagoyal/Desktop/React/tictac-toe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from \"react\";\nimport Square from \"./components/Square\";\nimport { Patterns } from \"./components/Pattern\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"O\");\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  });\n  useEffect(() => {\n    checkWin();\n\n    if (player === 'X') {\n      setPlayer('O');\n    } else {\n      setPlayer('X');\n    }\n  }, [board]);\n  useEffect(() => {\n    if (result.state !== \"none\") {\n      alert(`Game finished:Winning Player ${result.winner}`);\n    }\n  }, [result]);\n\n  const chooseSquare = square => {\n    setBoard(board.map((val, idx) => {\n      if (idx === square && val === \"\") {\n        return player;\n      }\n\n      return val;\n    }));\n  };\n\n  const checkWin = () => {\n    Patterns.forEach(currPattern => {\n      const firstPlayer = board[currPattern[0]];\n      if (firstPlayer === \"\") return;\n      let foundWinningPattern = true;\n      currPattern.forEach(idx => {\n        if (board[idx] !== firstPlayer) {\n          foundWinningPattern = false;\n        }\n      });\n\n      if (foundWinningPattern) {\n        setResult = {\n          winner: player,\n          state: \"won\"\n        };\n      }\n    });\n  };\n\n  const checkTie = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[0],\n        chooseSquare: () => chooseSquare(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[1],\n        chooseSquare: () => chooseSquare(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[2],\n        chooseSquare: () => chooseSquare(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[3],\n        chooseSquare: () => chooseSquare(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[4],\n        chooseSquare: () => chooseSquare(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[5],\n        chooseSquare: () => chooseSquare(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        val: board[6],\n        chooseSquare: () => chooseSquare(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[7],\n        chooseSquare: () => chooseSquare(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        val: board[8],\n        chooseSquare: () => chooseSquare(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6i5PuYr1v9fmxW+jzM9+jegKbQ4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sanyagoyal/Desktop/React/tictac-toe/src/App.js"],"names":["useState","useEffect","Square","Patterns","App","board","setBoard","player","setPlayer","result","setResult","winner","state","checkWin","alert","chooseSquare","square","map","val","idx","forEach","currPattern","firstPlayer","foundWinningPattern","checkTie"],"mappings":"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","sourcesContent":["import './App.css';\nimport {useState,useEffect} from \"react\";\nimport Square from \"./components/Square\";\nimport {Patterns} from \"./components/Pattern\";\nfunction App() {\n  const [board ,setBoard]=useState([\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]);\n  const [player,setPlayer]=useState(\"O\");\n  const [result,setResult]=useState({winner:\"none\",state:\"none\"});\n  \n  useEffect(()=>{\n    checkWin();\n    if(player==='X'){\n      setPlayer('O');\n    }\n    else{\n      setPlayer('X');\n    }\n\n  },[board]);\n  useEffect(()=>{\n    if(result.state !==\"none\"){\n alert(`Game finished:Winning Player ${result.winner}`);\n    }\n  },[result])\n  \n  const chooseSquare=(square) =>{\n    setBoard(board.map((val,idx) => {\n      if (idx ===square && val===\"\"){\n        return player;\n      }\n      return val;\n\n    }));\n    \n\n  };\n\n  const checkWin = ()=>{\n    Patterns.forEach((currPattern)=>{\n      const firstPlayer=board[currPattern[0]];\n      if(firstPlayer===\"\")return;\n      let foundWinningPattern=true;\n      currPattern.forEach((idx)=>{\n        if(board[idx]!==firstPlayer){\n          foundWinningPattern=false;\n        }\n      })\n      if(foundWinningPattern){\n        setResult=({winner:player,state:\"won\"});\n\n      }\n    })\n\n  };\n\n  const checkTie= ()=>{\n    \n  }\n  return (\n    <div className=\"App\">\n      <div className=\"board\"></div>\n      <div className=\"row\">\n        <Square val={board[0]} chooseSquare={() => chooseSquare(0)}/>\n        <Square val={board[1]} chooseSquare={() => chooseSquare(1)}/>\n        <Square val={board[2]} chooseSquare={() => chooseSquare(2)}/>\n        </div>\n\n      <div className=\"row\">\n      <Square val={board[3]} chooseSquare={() => chooseSquare(3)}/>\n        <Square val={board[4]} chooseSquare={() => chooseSquare(4)}/>\n        <Square val={board[5]} chooseSquare={() => chooseSquare(5)}/>\n      </div>\n      \n      <div className=\"row\">\n      <Square val={board[6]} chooseSquare={() => chooseSquare(6)}/>\n        <Square val={board[7]} chooseSquare={() => chooseSquare(7)}/>\n        <Square val={board[8]} chooseSquare={() => chooseSquare(8)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}